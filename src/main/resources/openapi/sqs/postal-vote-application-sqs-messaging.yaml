openapi: 3.0.0
info:
  title: Approved/Rejected Postal Application SQS Message
  version: 1.0.5
  description: |-
    Approved/Rejected Postal application API SQS Message Types for EROP

    Messages defined in this spec are produced by EROP and consumed by EMS.

    Any changes to this spec should be based on joint collaboration and agreement between EROP and EM.

    Whilst this is an openAPI spec, it does not imply being used to define REST APIs, nor is it intended to.

    The `paths` elements are being used to document (at a high level) the SQS queues and the request bodies that are expected
    to be published to them. **There is no intent to generate or implement SQS queues or listener classes from this document.**

    The `paths` element is only being used in order to maintain the structure of the openApi spec, as `paths` are required
    elements.
#
# --------------------------------------------------------------------------------
#

paths:
  #
  # --------------------------------------------------------------------------------
  # SQS Queues start here
  # --------------------------------------------------------------------------------
  #
  '/postal-vote-application':
    post:
      tags:
        - SQS queues
      requestBody:
        $ref: '#/components/requestBodies/PostalVoteApplicationMessage'
      responses:
        '204':
          description: No response content.

components:
  #
  # Schema and Enum Definitions
  # -
  schemas:
    OverseasAddress:
      title: OverseasAddress
      type: object
      description: 'Overseas Address format. (TODO:EIP1-725 confirm required fields, change to match IER)'
      properties:
        country:
          type: string
          maxLength: 255
        addressLine1:
          type: string
          maxLength: 255
        addressLine2:
          type: string
          maxLength: 255
        addressLine3:
          type: string
          maxLength: 255
        addressLine4:
          type: string
          maxLength: 255
        addressLine5:
          type: string
          maxLength: 255
      required:
        - country

    BfpoAddress:
      title: BfpoAddress
      type: object
      description: 'BFPO Address format'
      properties:
        bfpoNumber:
          type: string
          maxLength: 7
        addressLine1:
          type: string
          maxLength: 255
        addressLine2:
          type: string
          maxLength: 255
        addressLine3:
          type: string
          maxLength: 255
        addressLine4:
          type: string
          maxLength: 255
        addressLine5:
          type: string
          maxLength: 255
      required:
        - bfpoNumber

    PostalVoteDetails:
      type: object
      properties:
        ballotAddress:
          $ref: '../sqs/Models/Address.yaml'
        ballotOverseasPostalAddress:
          $ref: '#/components/schemas/OverseasAddress'
        ballotBfpoPostalAddress:
          $ref: '#/components/schemas/BfpoAddress'
        ballotAddressReason:
          type: string
          description: ' (required only if “ballot” address given) The reason the applicant gave for using a different address for the ballot paper (max 500 utf-8 chars)'
          maxLength: 500
        voteUntilFurtherNotice:
          type: boolean
          description: Mutually exclusive postal voting limits. True if the elector wishes to vote by post until further notice.
        voteForSingleDate:
          type: string
          format: date
          description: |
            If postal application is for a single dates.
            In ISO8601 date format '2022-08-02'
        voteStartDate:
          type: string
          format: date
          description: |
            If set, the elector wishes to vote by post for the period defined by the two dates. If present, then postalVoteEndDate must also be present
            In ISO8601 date format '2022-08-02'
        voteEndDate:
          type: string
          format: date
          description: |
            If set, the elector wishes to vote by post for the period defined by the two dates. If present, then postalVoteStartDate must also be present
            In ISO8601 date format '2022-08-02'

    PostalVoteApplicationMessage:
      title: PostalVoteApplicationMessage
      x-api-owner: EMS
      x-api-consumer: EROP
      type: object
      x-examples:
        Example 1:
          applicationDetails:
            id: 502cf250036469154b4f85fc
            createdAt: 2022-08-01T14:14:55Z
            gssCode: T12345678
            source: web
            authorisedAt: 2022-08-02T10:10:10Z
            authorisingStaffId: jsmith99@somecouncil.gov.uk
            signature: LzlqLzRBQ...
            applicationStatus: approved
          applicantDetails:
            firstName: First
            middleNames: Middle
            surname: Last
            dob: '1995-03-02'
            registeredAddress:
              property: Aviation House
              street: 125 Kingsway
              locality: Camden
              town: London
              area: Greater London
              postcode: SW112DR
              uprn: 098765
            phone: 07799779977
            email: john@example.com
            referenceNumber: V3HQ9LKI0W
            ipAddress: 1.2.3.4
            language: en
            emsElectorId: e87cbaea-0deb-4058-95c6-8240d426f5e1
          postalVoteDetails:
            ballotAddress:
              property: Another House
              street: 234 Kingsway
              locality: Camden
              town: London
              area: Greater London
              postcode: SW112DR
              uprn: '098766'
            ballotAddressReason: I am away from home for work
            voteUntilFurtherNotice: true
      properties:
        applicationDetails:
          $ref: '../sqs/Models/ApplicationDetails.yaml'
        applicantDetails:
          $ref: '../sqs/Models/ApplicantDetails.yaml'
        postalVoteDetails:
          $ref: '#/components/schemas/PostalVoteDetails'

      required:
        - applicationDetails
        - applicantDetails
  #
  # Request Body Definitions
  # --------------------------------------------------------------------------------
  requestBodies:
    PostalVoteApplicationMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostalVoteApplicationMessage'
    PostalEmsConfirmedReceiptMessage:
      content:
        application/json:
          schema:
            $ref: '../sqs/Models/EmsConfirmedReceiptMessage.yaml'
