openapi: 3.0.0
info:
  title: EROP EMS Integration APIs for Postal and Proxy Vote Applications (OAVA)
  version: 1.2.2
  description: |
    This specification is for an API hosted by EROP for EMS clients to fetch
    details of Postal Vote and Proxy Vote applications made by the public.

    The term OAVA is used in places, meaning "Online Absent Vote Applications", to encompass
    Postal Vote and Proxy Vote.

    EMSs can pull OAVA applications from a queue and acknowledge each application as successfully downloaded.

    Authentication to this API is handled via TLS client certificates. Each client EMS system is issued
    a client certificate by IERDS which will authenticate and identify the client. See doc referenced below.

    See also:

    - "IER EMS API" for the EMS facing API in IER that relays Register to Vote applications

    - EROP to EMS Register Checker API - https://github.com/cabinetoffice/eip-ero-register-checker-api/blob/main/src/main/resources/openapi/RegisterCheckerAPIs.yaml

    - "Internet-facing endpoint for EMS API - Guide for EMS Implementers", this document describes the TLS client certificate auth in detail
  contact:
    name: Krister Bone
    email: krister.bone@valtech.com
servers:
  - url: 'http://localhost:3000'
  - url: 'https://api.ems-integration.dev.erop.ierds.uk'
  - url: 'https://api.ems-integration.int.erop.ierds.uk'
  - url: 'https://api.ems-integration.test.erop.ierds.uk'
  - url: 'https://api.ems-integration.erop.ierds.uk'
  - url: 'https://api.ems-integration.dev.eip.erop.ierds.uk'
  - url: 'https://api.ems-integration.int.eip.erop.ierds.uk'
  - url: 'https://api.ems-integration.test.eip.erop.ierds.uk'
  - url: 'https://api.ems-integration.eip.erop.ierds.uk'
paths:
  /postalvotes:
    get:
      summary: -|
        For retrieving approved and rejected Postal Vote applications after determination within the EROP
      tags:
        - Postal Vote related endpoints
      responses:
        '200':
          $ref: '#/components/responses/PostalVoteApplications'
      operationId: get-postal-votes
      description: |
        ## Overview

        When an application for a Postal Vote is received via the IER web frontend, it is passed to EROP by IER. When an application is received on paper the ERO will transcribe it into the EROP.

        Postal Vote applications from both sources will be processed in EROP by ERO staff until the application is either accepted or rejected.

        Accepted applications will have verified the identity of the person making the application; verified that the applicant is a registered elector in the current LA/VJB (see "Register Checker API” https://github.com/cabinetoffice/eip-ero-register-checker-api/blob/main/src/main/resources/openapi/RegisterCheckerAPIs.yaml); and verified that the signature is acceptable.

        If any of the above conditions can't be satisfied, applications will be rejected.

        EMS systems are responsible for sending approved and rejected communications to electors, this service will return both approved and rejected applications to EMSs.

        EMS are expected to poll this endpoint regularly and automatically update the corresponding elector records without user intervention. We recommend polling once every 5 minutes.

        ## Queue Management

        This endpoint acts as a notification queue. To ensure resilience against communication failures, reading entries from this queue does not consume them. After successfully receiving a notification from this endpoint, the EMS should call the "`PUT /postalvotes/{id}`" endpoint for each notification that it has received and successfully processed.

        The server will not lock or hide records between the GET and DELETE calls, so it is not safe to call this endpoint concurrently from multiple client workers or threads without adding client-side deduplication or idempotency.

        ## Elector ID and Identity Matching

        During processing in EROP, approved applications must be matched to known electors in the current LA/VJB. This will be assisted and confirmed using the "Register Checker API”. Any ambiguity in the matching will have been resolved and explicitly matched to a corresponding elector with the LA/VJB's EMS system. The result of this matching will be returned with each application in the “emsElectorId” field.

        Should no match exist within the EMS, applications will be rejected and will not contain the “emsElectorId” field and EMS systems will be responsible for rejected notifications to the applicants.

        The receiving EMS system must use this “emsElectorId” to match which elector record to update. The other fields (“fn”, “ln”, “dob”, “reguprn” etc.) are for information and diagnostic purposes only. An EMS system receiving this application MUST NOT automatically override the matching that has been selected by the ERO user in the case of ambiguous names or similar.

        ## Note about electors applying both to register and for a postal vote

        We expect many Electors may apply both to Register to Vote and for a Postal Vote at around the same time on the public facing website (one after the other). In that case the Absent Vote application will be held in the EROP (shown as “pending”) and will not appear in this queue until the applicant is registered.
      parameters:
        - schema:
            type: integer
          in: query
          name: pageSize
          description: 'The maximum number of records to return in the response. Default 100, min 1, max 500'
      security:
        - emsCertificateLambdaAuthorizer: []
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/postalvotes'
        requestParameters:
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET
  '/postalvotes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary:
        Confirmation from EMSs that the Postal Vote application has been received and should be
        removed from the queue. The EMS can indicate if processing was successful or failed to update the elector's
        details - or any other failure in processing. Error responses will alert the determining ERO officer of the failure.
      operationId: put-postal-votes-id
      requestBody:
        $ref: '#/components/requestBodies/EMSApplicationResponse'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Postal Votes
      description:
        Postal vote applications acknowledged will be removed from the queue immediately,
        
        If the specified ID does not exist, or belongs to a Postal Vote application that is not for the currently connected ERO,
        then the response will be an “HTTP 404 Not Found” response.
      security:
        - emsCertificateLambdaAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/postalvotes/{id}'
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: PUT        
    post:
      summary:
        Deprecated - use PUT as operating on an existing resource.
        Confirmation from EMSs that the Postal Vote application has been received and should be
        removed from the queue. The EMS can indicate if processing was successful or failed to update the elector's
        details - or any other failure in processing. Error responses will alert the determining ERO officer of the failure.
      operationId: post-postal-votes-id
      deprecated: true
      requestBody:
        $ref: '#/components/requestBodies/EMSApplicationResponse'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Postal Votes
      description:
        Postal vote applications acknowledged will be removed from the queue immediately,
        
        If the specified ID does not exist, or belongs to a Postal Vote application that is not for the currently connected ERO,
        then the response will be an “HTTP 404 Not Found” response.
      security:
        - emsCertificateLambdaAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/postalvotes/{id}'
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: POST
    delete:
      summary: -|
        Deprecated, please use POST endpoint to return success and failure responses.
        Confirmation from EMSs that the Postal Vote application has been received and should be
        removed from the queue.
      operationId: delete-postal-votes-id
      deprecated: true
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Postal Votes
      description:
        Postal vote applications acknowledged will be removed from the queue immediately,
        If the specified ID does not exist, or belongs to a Postal Vote application that is not for the currently connected ERO,
        then the response will be an “HTTP 404 Not Found” response.
      security:
        - emsCertificateLambdaAuthorizer: []
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/postalvotes/{id}'
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: DELETE
  /proxyvotes:
    get:
      summary: For retrieving approved and rejected Proxy Vote applications after determination within the EROP
      tags:
        - Proxy Vote
      responses:
        '200':
          $ref: '#/components/responses/ProxyVoteApplications'
      operationId: get-proxy-votes
      description: |
        All the same workflow considerations described at `/proxyyotes` apply here
      parameters:
        - schema:
            type: number
          in: query
          name: pageSize
          description: 'The maximum number of records to return in the response. Default 100, min 1, max 500'
      security:
        - emsCertificateLambdaAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/proxyvotes'
        requestParameters:
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET
  '/proxyvotes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary:
        Confirmation from EMSs that the Proxy Vote application has been received and should be 
        removed from the queue. The EMS can indicate if processing was successful or failed to update the elector's
        details - or any other failure in processing. Error responses will alert the determining ERO officer of the failure.
      operationId: put-proxy-votes-id
      requestBody:
        $ref: '#/components/requestBodies/EMSApplicationResponse'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Proxy Vote related endpoints
      description:
        Proxy vote applications that are acknowledged in this way will be removed from the queue immediately, and marked that the EMS has successfully received and committed the application within their corresponding EMS.

        If the specified ID does not exist, or belongs to a Proxy Vote application that is not for the currently connected ERO, then the response will be an “HTTP 404 Not Found” response.
      security:
        - emsCertificateLambdaAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/proxyvotes/{id}'
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: PUT        
    post:
      summary:
        Deprecated - use PUT as operating on an existing resource.
        Confirmation from EMSs that the Proxy Vote application has been received and should be 
        removed from the queue. The EMS can indicate if processing was successful or failed to update the elector's
        details - or any other failure in processing. Error responses will alert the determining ERO officer of the failure.
      operationId: post-proxy-votes-id
      deprecated: true      
      requestBody:
        $ref: '#/components/requestBodies/EMSApplicationResponse'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Proxy Vote related endpoints
      description:
        Proxy vote applications that are acknowledged in this way will be removed from the queue immediately, and marked that the EMS has successfully received and committed the application within their corresponding EMS.

        If the specified ID does not exist, or belongs to a Proxy Vote application that is not for the currently connected ERO, then the response will be an “HTTP 404 Not Found” response.
      security:
        - emsCertificateLambdaAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/proxyvotes/{id}'
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: POST
    delete:
      summary:
        Deprecated, please use POST endpoint to return success and failure responses. 
        Confirmation from EMSs that the Postal Vote application has been received and should be 
        removed from the queue.
      operationId: delete-proxy-votes-id
      deprecated: true
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Proxy Vote related endpoints
      description:
        Proxy vote applications that are acknowledged in this way will be removed from the queue immediately, and marked that the EMS has successfully received and committed the application within their corresponding EMS.

        If the specified ID does not exist, or belongs to a Proxy Vote application that is not for the currently connected ERO, then the response will be an “HTTP 404 Not Found” response.
      security:
        - emsCertificateLambdaAuthorizer: [ ]
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/proxyvotes/{id}'
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: DELETE  
components:
  schemas:
    PostalVote:
      type: object
      properties:
        id:
          type: string
          description: the IER ID of the absent vote application
          pattern: '^[a-fA-F\d]{24}$'
          example: 502cf250036469154b4f85fc
        createdAt:
          type: string
          format: date-time
          description: the date and time the application was received in ISO8601 format
        gssCode:
          type: string
          minLength: 9
          maxLength: 9
          example: 'E09000007'
          description: GSS code of the ERO/VJB of the applicant/application
        source:
          type: string
          minLength: 1
          maxLength: 10
          example: erop
          description: |
            either “web” for digital applications or “erop” for applications received by post and entered into the EROP
        authorisedAt:
          type: string
          format: date-time
          description: the date and time the application was determined in the EROP in ISO8601
        authorisingStaffId:
          type: string
          maxLength: 255
          format: email
          description: the id of the ERO user who approved this application in the EROP
        detail:
          type: object
          required:
            - refNum
            - ip
            - lang
            - applicationStatus
            - status
            - fn
            - ln
            - regstreet
            - regpostcode
            - registeredAddress
          properties:
            refNum:
              type: string
              description: the reference number that was shown to the applicant (digital applications only)
              maxLength: 10
              example: 'V3HQ9LKI0W'
            ip:
              type: string
              maxLength: 45
              example: 127.0.0.1
              description: |
                the IP address from which the application was received (digital applications only)
            lang:
              $ref: '#/components/schemas/ApplicationLanguage'
            applicationStatus:
              $ref: '#/components/schemas/ApplicationStatus'
            rejectedReasons:
              $ref: '#/components/schemas/RejectedReasons'
            emsElectorId:
              type: string
              maxLength: 255
              description: the unique ID for this elector as used by the EMS for the current LA/VJ. This will have been returned to the EROP by the EMS over the “EROP to EMS Register Checker API”. See comments in “Elector ID and Identity Matching” above.
            fn:
              type: string
              minLength: 1
              maxLength: 35
              description: First name
            mn:
              type: string
              maxLength: 100
              description: |
                Middle names (optional)

                **Note:** The current/old paper forms for absent voting collect fields “First name(s) (in full)” and “Last name” whereas the current Register to Vote online form collects “First name”, “Middle names (optional)” and “Last name”. The new online form for absent votes will follow the latter convention and this API reflects that.
            ln:
              type: string
              minLength: 1
              maxLength: 35
              description: Last name
            dob:
              type: string
              format: date
              description: date of birth in ISO8601 format
            regproperty:
              type: string
              maxLength: 255
              description: Replaced by registeredAddress
              deprecated: true
            regstreet:
              type: string
              minLength: 1
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress
            reglocality:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress
            regtown:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress
            regarea:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress
            regpostcode:
              type: string
              minLength: 1
              maxLength: 10
              deprecated: true
              description: Replaced by registeredAddress
            reguprn:
              type: string
              pattern: '^\d{1,12}$'
              deprecated: true
              description: Replaced by registeredAddress
            registeredAddress:
              $ref: '#/components/schemas/Address'            
            phone:
              type: string
              maxLength: 50
              description: phone number for contact
            email:
              type: string
              format: email
              maxLength: 255
              description: email address for contact
            ballotAddress:
              $ref: '#/components/schemas/Address'
            ballotOverseasPostalAddress:
              $ref: '#/components/schemas/OverseasAddress'
            ballotBfpoPostalAddress:
              $ref: '#/components/schemas/BfpoAddress'                
            ballotproperty:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by ballotAddress, ballotOverseasAddress or BfpoAddress
            ballotstreet:
              type: string
              minLength: 1
              maxLength: 255
              deprecated: true
              description: Replaced by ballotAddress, ballotOverseasAddress or BfpoAddress
            ballotlocality:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by ballotAddress, ballotOverseasAddress or BfpoAddress
            ballottown:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by ballotAddress, ballotOverseasAddress or BfpoAddress
            ballotarea:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by ballotAddress, ballotOverseasAddress or BfpoAddress
            ballotpostcode:
              type: string
              maxLength: 10
              deprecated: true
              description: Replaced by ballotAddress, ballotOverseasAddress or BfpoAddress
            ballotuprn:
              type: string
              deprecated: true
              description: Replaced by ballotAddress, ballotOverseasAddress or BfpoAddress
              pattern: '^\d{1,12}$'
            ballotAddressReason:
              type: string
              description: ' (required only if “ballot” address given) The reason the applicant gave for using a different address for the ballot paper (max 500 utf-8 chars)'
              maxLength: 500
            signature:
              type: string
              format: byte
              description: |
                Base64 encoded signature image of the applicant’s signature, in Base64 encoded PNG format. The image will be 1050 pixels wide and 300 pixels high, corresponding to a scan of the paper forms at 300 dpi. The image will be black and white only. The image will be cropped so that the signature fills the box with a small white margin. The data length is usually under 30KB.
            signatureWaived:
              type: boolean
              default: false
              description: |
                Where an Elector has been granted a signature waiver. If 'true', then no signature will be provided and a signatureWaivedReason will be supplied.
            signatureWaivedReason:
              type: string
              maxLength: 500
              default: false
              description: |
                Where an Elector has been granted a signature waiver, this field will contain a description of the reason for the waiver.
            postalVoteUntilFurtherNotice:
              type: boolean
              description: Mutually exclusive postal voting limits. True if the elector wishes to vote by post until further notice.
            postalVoteForSingleDate:
              type: string
              format: date
              description: |
                If postal application is for a single dates.
                In ISO8601 date format '2022-08-02'
            postalVoteStartDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by post for the period defined by the two dates. If present, then postalVoteEndDate must also be present
                In ISO8601 date format '2022-08-02'
            postalVoteEndDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by post for the period defined by the two dates. If present, then postalVoteStartDate must also be present
                In ISO8601 date format '2022-08-02'
      required:
        - id
        - createdAt
        - gssCode
        - source
        - authorisedAt
        - authorisingStaffId
        - detail
    ProxyVote:
      type: object
      properties:
        id:
          type: string
          description: the IER ID of the absent vote application
          pattern: '^[a-fA-F\d]{24}$'
          example: 502cf250036469154b4f85fc
        createdAt:
          type: string
          format: date-time
          description: the date and time the application was received in ISO8601 format
        gssCode:
          type: string
          minLength: 9
          maxLength: 9
          example: 'E09000007'
          description: GSS code of the ERO/VJB of the applicant/application
        source:
          type: string
          minLength: 1
          maxLength: 10
          example: web
          description: |
            either “web” for digital applications or “erop” for applications received by post and entered into the EROP
        authorisedAt:
          type: string
          format: date-time
          description: the date and time the application was determined in the EROP in ISO8601
        authorisingStaffId:
          type: string
          maxLength: 256
          format: email
          description: the id of the ERO user who approved this application in the EROP
        detail:
          type: object
          required:
            - refNum
            - ip
            - lang
            - applicationStatus
            - fn
            - ln
            - regstreet
            - regpostcode
            - registeredAddress
          properties:
            refNum:
              type: string
              description: the reference number that was shown to the applicant (digital applications only)
              maxLength: 10
              example: 'V3HQ9LKI0W'
            ip:
              type: string
              maxLength: 45
              example: 127.0.0.1
              description: |
                the IP address from which the application was received (digital applications only)
            lang:
              $ref: '#/components/schemas/ApplicationLanguage'
            applicationStatus:
              $ref: '#/components/schemas/ApplicationStatus'
            rejectedReasons:
              $ref: '#/components/schemas/RejectedReasons'              
            emsElectorId:
              type: string
              maxLength: 255
              description: the unique ID for this elector as used by the EMS for the current LA/VJ. This will have been returned to the EROP by the EMS over the “EROP to EMS Register Checker API”. See comments in “Elector ID and Identity Matching” above.
            fn:
              type: string
              maxLength: 35
              description: First name
            mn:
              type: string
              maxLength: 100
              description: Middle names (optional)
            ln:
              type: string
              maxLength: 35
              description: Last name
            dob:
              type: string
              format: date
              description: date of birth in ISO8601 format
            regproperty:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress              
            regstreet:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress              
            reglocality:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress              
            regtown:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress              
            regarea:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress              
            regpostcode:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by registeredAddress              
            reguprn:
              type: string
              deprecated: true
              description: Replaced by registeredAddress         
            registeredAddress:
              $ref: '#/components/schemas/Address'
         
            phone:
              type: string
              maxLength: 50
              description: phone number for contact
            email:
              type: string
              format: email
              maxLength: 255
              description: email address for contact
            proxyfn:
              type: string
              maxLength: 35
              description: ' First name of the chosen proxy'
            proxymn:
              type: string
              maxLength: 100
              description: |
                Middle name(s) (optional) of the chosen proxy
            proxyln:
              type: string
              maxLength: 35
              description: |
                last name of the chosen proxy
            proxyfamilyrelationship:
              type: string
              maxLength: 500
              description: |
                (optional) the family relationship (if any) of the chosen proxy. The question to users is “What is your proxy’s relationship to you?”
            proxyAddress:
              $ref: '#/components/schemas/Address'                
            proxyproperty:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by proxyAddress
            proxystreet:
              type: string
              minLength: 1
              maxLength: 255
              deprecated: true
              description: Replaced by proxyAddress              
            proxylocality:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by proxyAddress              
            proxytown:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by proxyAddress              
            proxyarea:
              type: string
              maxLength: 255
              deprecated: true
              description: Replaced by proxyAddress              
            proxypostcode:
              type: string
              minLength: 1
              maxLength: 10
              deprecated: true
              description: Replaced by proxyAddress              
            proxyuprn:
              type: string
              deprecated: true
              description: Replaced by proxyAddress
            proxyphone:
              type: string
              maxLength: 50
            proxyemail:
              type: string
              format: email
              maxLength: 255
            proxyreason:
              type: string
              description: |-
                a free-form text value containing the applicant’s response to the question “please explain why you are not able to go to your polling station on polling day” for the primary form variant or other text for other form variants (max 500 utf-8 chars)
                All proxy vote forms, including variants which require supporting documentation, will be handled in the EROP. The ERO user working in that application will review the documentation as required and only accepted applications will be seen on this API. The supporting documentation, if any, will not be sent through here. The field “proxyreason” will contain details for other form variants and may have been filled in by an ERO user.
              maxLength: 500
            signature:
              type: string
              format: byte
              description: |
                Base64 encoded signature image of the applicant’s signature, in Base64 encoded PNG format. The image will be 1050 pixels wide and 300 pixels high, corresponding to a scan of the paper forms at 300 dpi. The image will be black and white only. The image will be cropped so that the signature fills the box with a small white margin. The data length is usually under 30KB.
            signatureWaived:
              type: boolean
              default: false
              description: |
                Where an Elector has been granted a signature waiver. If 'true', then no signature will be provided and a signatureWaivedReason will be supplied.
            signatureWaivedReason:
              type: string
              maxLength: 250
              default: false
              description: |
                Where an Elector has been granted a signature waiver, this field will contain a description of the reason for the waiver.
            proxyVoteUntilFurtherNotice:
              type: boolean
              description: Mutually exclusive proxy voting limits. True if the elector wishes to vote by proxy until further notice.
            proxyVoteForSingleDate:
              type: string
              format: date
              description: |
                If proxy application is for a single date
                In ISO8601 date format '2022-08-02'
            proxyVoteStartDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by proxy for the period defined by the two dates. If present, then proxyVoteEndDate must also be present
                In ISO8601 date format '2022-08-02'
            proxyVoteEndDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by proxy for the period defined by the two dates. If present, then proxyVoteStartDate must also be present
                In ISO8601 date format '2022-08-02'
      required:
        - id
        - createdAt
        - source
        - gssCode
        - authorisedAt
        - authorisingStaffId
        - detail
    ApplicationStatus:
      title: Application Status
      description: Enum indicating if an application is approved or rejected.
      type: string
      enum:
        - approved
        - rejected
    RejectedReasons:
      title: Rejected Reasons
      description: |
        Rejected notes and reasons as provided by the determining ERO when rejecting applications.
        Applications for Welsh language EROs and Welsh Electors may contain reasons in English and/or Welsh.
        Expected to be used by EMSs in elector communications.
      type: object
      properties:
        englishReason:
          $ref: '#/components/schemas/RejectedReason'
        welshReason:
          $ref: '#/components/schemas/RejectedReason'
    RejectedReason:
      title: Rejected Reason
      description: |
        ERO supplied rejection notes and list of specific reasons for rejected applications.
      type: object
      properties:
        notes:
          type: string
          maxLength: 1024
        reasons:
          type: array
          items:
            type: string
            maxLength: 50
    ApplicationLanguage:
      title: Application Language
      description: Enum indicating “en” or “cy” according to which language the applicant used
      type: string
      enum:
        - en
        - cy
    Address:
      title: Address
      description: Address format used throughout gov.uk voter services.
      type: object
      x-examples:
        Minimum data:
          street: Street 1
          postcode: PC1 2FB
        Normal Address:
          street: East Lodge
          property: Balruddery
          locality: Invergowrie
          town: Dundee
          area: Angus
          postcode: DD25LF
          uprn: '117095813'
      properties:
        street:
          type: string
          maxLength: 255
        property:
          type: string
          maxLength: 255
        locality:
          type: string
          maxLength: 255
        town:
          type: string
          maxLength: 255
        area:
          type: string
          maxLength: 255
        postcode:
          type: string
          maxLength: 10
        uprn:
          type: string
          description: Unique Property Reference Number consisting of up to 12 digits in length
          pattern: '^\d{1,12}$'
      required:
        - street
        - postcode        
    OverseasAddress:
      title: OverseasAddress
      type: object
      description: 'Overseas Address format. (TODO:EIP1-725 confirm required fields, change to match IER)'
      properties:
        country:
          type: string
          maxLength: 255
        addressLine1:
          type: string
          maxLength: 255
        addressLine2:
          type: string
          maxLength: 255
        addressLine3:
          type: string
          maxLength: 255
        addressLine4:
          type: string
          maxLength: 255
        addressLine5:
          type: string
          maxLength: 255
      required:
        - country        
    BfpoAddress:
      title: BfpoAddress
      type: object
      description: 'BFPO Address format'
      properties:
        bfpoNumber:
          type: string
          maxLength: 7
        addressLine1:
          type: string
          maxLength: 255
        addressLine2:
          type: string
          maxLength: 255
        addressLine3:
          type: string
          maxLength: 255
        addressLine4:
          type: string
          maxLength: 255
        addressLine5:
          type: string
          maxLength: 255
      required:
        - bfpoNumber
    ProxyVoteApplications:
      title: Proxy Votes Applications
      type: object
      properties:
        pageSize:
          type: integer
        proxyVotes:
          type: array
          items:
            $ref: '#/components/schemas/ProxyVote'
    PostalVoteApplications:
      title: Postal Vote Applications
      type: object
      properties:
        pageSize:
          type: integer
        postalVotes:
          type: array
          items:
            $ref: '#/components/schemas/PostalVote'
    EMSApplicationResponse:
      title: EMS Application Processing Response
      description: The EMSs response indicating success or failure processing the application.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EMSApplicationStatus'
        message:
          type: string
          description: ERO friendly summary of processing status. Primarily intended for error conditions.
        details:
          type: string
          description: Detailed description of processing status.
      required:
        - status
    EMSApplicationStatus:
      title: EMS Application Status
      description: Indicates if the EMS succeeded or failed updating the application's Elector details.
      type: string
      default: success
      enum:
        - success
        - failure
  responses:
    PostalVoteApplications:
      description: Determined Postal Vote applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostalVoteApplications'
    ProxyVoteApplications:
      description: Determined Proxy Vote applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProxyVoteApplications'
  requestBodies:
    EMSApplicationResponse:
      description: The EMSs response indicating success or failure processing the application.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EMSApplicationResponse'
  securitySchemes:
    emsCertificateLambdaAuthorizer:
      type: 'apiKey'
      name: 'Authorization'
      in: 'header'
      x-amazon-apigateway-authtype: 'custom'
      x-amazon-apigateway-authorizer:
        type: 'request'
        authorizerUri: '${ems_certificate_authorizer_id}'
        authorizerCredentials: '${ems_certificate_authorizer_role}'
        authorizerPayloadFormatVersion: '1.0'
        authorizerResultTtlInSeconds: 0
