openapi: 3.0.0
info:
  title: EROP EMS Integration APIs for Postal and Proxy Vote Applications (OAVA)
  version: 1.0.0
  description: |
    This specification is for an API hosted by EROP (part of IERDS) for EMS clients to fetch
    details of Postal Vote and Proxy Vote applications made by the public.
    
    The term OAVA is used in places, meaning "Online Absent Vote Applications", to encompass
    Postal Vote and Proxy Vote.
    
    EMSs can pull OAVA applications from a queue and acknowledge each application as successfully downloaded.
    
    Authentication to this API is handled via TLS client certificates. Each client EMS system is issued
    a client certificate by IERDS which will authenticate and identify the client. See doc referenced below.
    
    See also: 
      = "IER EMS API" for the EMS facing API in IER that relays Register to Vote applications
      = EROP to EMS Register Checker API
      = "Internet-facing endpoint for EMS API - Guide for EMS Implementers", this document describes the TLS client certificate auth in detail
    
    TODO:
      = need to add support for overseas and BFPO address to postal ballot address
  contact:
    name: Krister Bone
    email: krister.bone@valtech.com
servers:
  - url: 'http://localhost:3000'
  - url: 'https://api.ems-oava.int.erop.ierds.uk'
  - url: 'https://api.ems-oava.test.erop.ierds.uk'
  - url: 'https://api.ems-oava.erop.ierds.uk'
paths:
  /postalVotes/accepted:
    get:
      summary: For requesting Postal Vote applications received from citizens
      tags:
        - Postal Vote related endpoints
      responses:
        '200':
          $ref: '#/components/responses/PostalVoteAccepted'
      operationId: get-postalVotes-accepted
      description: |
        TODO: need to also send rejected applications? Here or a sibling endpoint?
        
        ## Overview
        
        When an application for a Postal Vote is received via the IER web frontend, it is passed to EROP by IER. When an application is received on paper the ERO will transcribe it into the EROP.

        Postal Vote applications from both sources will be processed in the EROP by ERO staff until the application is accepted or rejected. This includes verifying the identity of the person making the application; verifying that the applicant is a registered elector in the current LA/VJB (see the “EROP to EMS Register Checker API” document); and verifying that the signature is acceptable.

        The record of accepted Postal Votes will continue to be maintained in the elector’s record on the EMS. To facilitate this, notifications of accepted Postal Vote applications are passed from EROP through IER and to EMS via this endpoint.
        
        EMS are expected to poll this endpoint regularly and automatically update the corresponding elector records without user intervention. We recommend polling once every 5 minutes.
        
        ## Queue Management
  
        This endpoint acts as a notification queue. To ensure resilience against communication failures, reading entries from this queue does not consume them. After successfully receiving a notification from this endpoint, the EMS should call the "`DELETE /postalVotes/{id}`" endpoint for each notification that it has received.

        The server will not lock or hide records between the GET and DELETE calls, so it is not safe to call this endpoint concurrently from multiple client workers or threads without adding client-side deduplication or idempotency.
        
        ## Elector ID and Identity Matching
        
        During processing in the EROP, the ERO user will match the received elector’s details (name, DoB, address) to a registered elector in the current LA/VJB. This will be assisted by the “EROP to EMS Register Checker API” connection, or may have proceeded manually if that API has not been implemented for the current LA/VJB or if it failed. Any ambiguity in the matching will have been resolved by the ERO user before the application reaches this queue. The result of this matching will be returned here in the field “emsElectorId”.
        
        The receiving EMS system must use this “emsElectorId” to decide which elector’s record to update. The other fields (“fn”, “ln”, “dob”, “reguprn” etc.) are for information and diagnostic purposes only. An EMS system receiving this application MUST NOT automatically override the matching that has been selected by the ERO user in the case of ambiguous names or similar.
        
        ## Note about electors applying both to register and for a postal vote
        
        We expect many Electors may apply both to Register to Vote and for a Postal Vote at around the same time on the public facing website (one after the other). In that case the Absent Vote application will be held in the EROP (shown as “pending”) and will not appear in this queue until the applicant is registered.
      parameters:
        - schema:
            type: number
          in: query
          name: pageSize
          description: 'the number of records to be present in the response. Default 100, min 1, max 500'
      security:
        - emsCertificateLambdaAuthorizer: []
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/postalVotes/accepted'
        requestParameters:
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET
  '/postalVotes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: For marking a single Postal Vote application as received
      operationId: delete-postalVotes-id
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Postal Vote related endpoints
      description: |-
        Postal vote applications that are acknowledged in this way will be removed from the queue immediately, and subsequently deleted from the IER system.
        
        If the specified ID does not exist, or belongs to a postal vote application that is not for the currently connected ERO, then the response will be an “HTTP 404 Not Found” response.
      security:
        - emsCertificateLambdaAuthorizer: []
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/proxyVotes/{id}'
        requestParameters:
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET
  /proxyVotes/accepted:
    get:
      summary: For requesting updates about accepted Proxy Vote applications
      tags:
        - Proxy Vote related endpoints
      responses:
        '200':
          $ref: '#/components/responses/ProxyVoteAccepted'
      operationId: get-proxyVotes-accepted
      description: |
        All the same workflow considerations described at `/postalVotes/accepted` apply here
      parameters:
        - schema:
            type: number
          in: query
          name: pageSize
          description: ' the number of records to be present in the response. Default 100, min 1, max 500.'
      security:
        - emsCertificateLambdaAuthorizer: []
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/proxyVotes/accepted'
        requestParameters:
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET
  '/proxyVotes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: For marking a single Proxy Vote application as received
      operationId: delete-proxyVotes-id
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      tags:
        - Proxy Vote related endpoints
      description: 'Proxy vote applications that are acknowledged in this way will be removed from the queue immediately, and subsequently deleted from the IER system.'
      security:
        - emsCertificateLambdaAuthorizer: []
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: '${base_uri}/proxyVotes/{id}'
        requestParameters:
          integration.request.header.client-cert-serial: context.authorizer.client-cert-serial
        connectionType: VPC_LINK
        connectionId: '${vpc_connection_id}'
        httpMethod: GET
components:
  schemas:
    PostalVote:
      type: object
      x-examples:
        Example 1:
          id: 502cf250036469154b4f85fc
          createdAt: 2022-08-01T14:14:55Z
          gssCode: T12345678
          source: web
          authorisedAt: 2022-08-02T10:10:10Z
          authorisingStaffId: jsmith99@somecouncil.gov.uk
          detail:
            refNum: V3HQ9LKI0W
            ip: 1.2.3.4
            lang: en
            emsElectorId: e87cbaea-0deb-4058-95c6-8240d426f5e1
            fn: First
            mn: Middle
            ln: Last
            dob: '1995-03-02'
            regproperty: Aviation House
            regstreet: 125 Kingsway
            reglocality: Camden
            regtown: London
            regarea: Greater London
            regpostcode: SW112DR
            reguprn: 098765
            phone: 07799779977
            email: john@example.com
            ballotproperty: Another House
            ballotstreet: 234 Kingsway
            ballotlocality: Camden
            ballottown: London
            ballotarea: Greater London
            ballotpostcode: SW112DR
            ballotuprn: '098766'
            ballotAddressReason: I am away from home for work
            signature: LzlqLzRBQ...
            postalVoteUntilFurtherNotice: true
      properties:
        id:
          type: string
          description: the IER ID of the absent vote application
          pattern: '^[a-fA-F\d]{24}$'
          example: 502cf250036469154b4f85fc
        createdAt:
          type: string
          format: date-time
          description: the date and time the application was received in ISO8601 format
        gssCode:
          type: string
          minLength: 9
          maxLength: 9
          description: GSS code of the ERO/VJB of the applicant/application
        source:
          type: string
          minLength: 10
          maxLength: 10
          description: |
            either “web” for digital applications or “erop” for applications received by post and entered into the EROP
        authorisedAt:
          type: string
          format: date-time
          description: the date and time the application was approved in the EROP in ISO8601
        authorisingStaffId:
          type: string
          maxLength: 255
          format: email
          description: the id of the ERO user who approved this application in the EROP
        detail:
          type: object
          required:
            - refNum
            - ip
            - lang
            - emsElectorId
            - fn
            - ln
            - regstreet
            - regpostcode
            - signature
          properties:
            refNum:
              type: string
              description: the reference number that was shown to the applicant (digital applications only)
              maxLength: 10
              example: 'V3HQ9LKI0W'
            ip:
              type: string
              maxLength: 45
              description: |
                the IP address from which the application was received (digital applications only)
            lang:
              type: string
              minLength: 2
              maxLength: 2
              description: “en” or “cy” according to which language the applicant used
            emsElectorId:
              type: string
              maxLength: 255
              description: the unique ID for this elector as used by the EMS for the current LA/VJ. This will have been returned to the EROP by the EMS over the “EROP to EMS Register Checker API”. See comments in “Elector ID and Identity Matching” above.
            fn:
              type: string
              maxLength: 35
              description: First name
            mn:
              type: string
              maxLength: 100
              description: |
                Middle names (optional)
                
                **Note:** The current/old paper forms for absent voting collect fields “First name(s) (in full)” and “Last name” whereas the current Register to Vote online form collects “First name”, “Middle names (optional)” and “Last name”. The new online form for absent votes will follow the latter convention and this API reflects that.
            ln:
              type: string
              maxLength: 35
              description: Last name
            dob:
              type: string
              format: date
              description: date of birth in ISO8601 format
            regproperty:
              type: string
              maxLength: 255
            regstreet:
              type: string
              maxLength: 255
            reglocality:
              type: string
              maxLength: 255
            regtown:
              type: string
              maxLength: 255
            regarea:
              type: string
              maxLength: 255
            regpostcode:
              type: string
              maxLength: 255
            reguprn:
              type: string
              description: Unique Property Reference Number consisting of up to 12 digits in length
              pattern: '^\d{1,12}$'
            phone:
              type: string
              maxLength: 50
              description: phone number for contact
            email:
              type: string
              format: email
              maxLength: 255
              description: email address for contact
            ballotproperty:
              type: string
              maxLength: 255
              description: |
                the address to which the applicant has requested the ballot paper is sent, if different to their registered address, in the same format as used on register to vote applications (all fields omitted if the ballot address is the same as the registered address) (if given, street and postcode are required other fields are optional)
            ballotstreet:
              type: string
              maxLength: 255
              description: |
                the address to which the applicant has requested the ballot paper is sent, if different to their registered address, in the same format as used on register to vote applications (all fields omitted if the ballot address is the same as the registered address) (if given, street and postcode are required other fields are optional)
            ballotlocality:
              type: string
              maxLength: 255
              description: |
                the address to which the applicant has requested the ballot paper is sent, if different to their registered address, in the same format as used on register to vote applications (all fields omitted if the ballot address is the same as the registered address) (if given, street and postcode are required other fields are optional)
            ballottown:
              type: string
              maxLength: 255
              description: |
                the address to which the applicant has requested the ballot paper is sent, if different to their registered address, in the same format as used on register to vote applications (all fields omitted if the ballot address is the same as the registered address) (if given, street and postcode are required other fields are optional)
            ballotarea:
              type: string
              maxLength: 255
              description: |
                the address to which the applicant has requested the ballot paper is sent, if different to their registered address, in the same format as used on register to vote applications (all fields omitted if the ballot address is the same as the registered address) (if given, street and postcode are required other fields are optional)
            ballotpostcode:
              type: string
              maxLength: 10
              description: |
                the address to which the applicant has requested the ballot paper is sent, if different to their registered address, in the same format as used on register to vote applications (all fields omitted if the ballot address is the same as the registered address) (if given, street and postcode are required other fields are optional)
            ballotuprn:
              type: string
              description: |
                the address to which the applicant has requested the ballot paper is sent, if different to their registered address, in the same format as used on register to vote applications (all fields omitted if the ballot address is the same as the registered address) (if given, street and postcode are required other fields are optional)
              pattern: '^\d{1,12}$'
            ballotAddressReason:
              type: string
              description: ' (required only if “ballot” address given) The reason the applicant gave for using a different address for the ballot paper (max 500 utf-8 chars)'
              maxLength: 500
            signature:
              type: string
              description: |
                An image of the applicant’s signature, in Base64 encoded PNG format. The image will be 1050 pixels wide and 300 pixels high, corresponding to a scan of the paper forms at 300 dpi. The image will be black and white only. The image will be cropped so that the signature fills the box with a small white margin. The data length is usually under 30KB.
            postalVoteUntilFurtherNotice:
              type: boolean
              description: Mutually exclusive postal voting limits. True if the elector wishes to vote by post until further notice.
            postalVoteForSingleDate:
              type: string
              format: date
              description:  |
                If postal application is for a single dates.
                In ISO8601 date format '2022-08-02'
            postalVoteStartDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by post for the period defined by the two dates. If present, then postalVoteEndDate must also be present
                In ISO8601 date format '2022-08-02'
            postalVoteEndDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by post for the period defined by the two dates. If present, then postalVoteStartDate must also be present
                In ISO8601 date format '2022-08-02'
      required:
        - id
        - createdAt
        - gssCode
        - source
        - authorisedAt
        - authorisingStaffId
        - detail
    ProxyVote:
      type: object
      x-examples:
        Example 1:
          id: 502cf250036469154b4f85fc
          createdAt: '2020-08-01T14:14:55Z'
          gssCode: T12345678
          source: web
          authorisedAt: '2022-08-02T10:10:10Z'
          authorisingStaffId: jsmith99@somecouncil.gov.uk
          detail:
            refNum: FA3435
            ip: 1.2.3.4
            lang: en
            emsElectorId: e87cbaea-0deb-4058-95c6-8240d426f5e1
            fn: First
            mn: Middle
            ln: Last
            dob: '1995-03-02'
            regproperty: Aviation House
            regstreet: 125 Kingsway
            reglocality: Camden
            regtown: London
            regarea: Greater London
            regpostcode: SW112DR
            reguprn: '098765'
            phone: '07799779977'
            email: john@example.com
            proxyfn: Jane
            proxymn: Middle
            proxyln: Doe
            proxyfamilyrelationship: Sister
            proxyproperty: Aviation House
            proxystreet: 125 Kingsway
            proxylocality: Camden
            proxytown: London
            proxyarea: Greater London
            proxypostcode: SW112DR
            proxyuprn: '098765'
            proxyphone: '07777123456'
            proxyemail: jane@example.com
            proxyreason: work commitments
            signature: LzlqLzRBQ...
            proxyVoteUntilFurtherNotice: true
      properties:
        id:
          type: string
          description: the IER ID of the absent vote application
          pattern: '^[a-fA-F\d]{24}$'
          example: 502cf250036469154b4f85fc
        createdAt:
          type: string
          format: date-time
          description: the date and time the application was received in ISO8601 format
        gssCode:
          type: string
          minLength: 9
          maxLength: 9
          description: GSS code of the ERO/VJB of the applicant/application
        source:
          type: string
          minLength: 10
          maxLength: 10
          description: |
            either “web” for digital applications or “erop” for applications received by post and entered into the EROP
        authorisedAt:
          type: string
          format: date-time
          description: the date and time the application was approved in the EROP in ISO8601
        authorisingStaffId:
          type: string
          maxLength: 256
          format: email
          description: the id of the ERO user who approved this application in the EROP
        detail:
          type: object
          required:
            - refNum
            - ip
            - lang
            - emsElectorId
            - fn
            - ln
            - regstreet
            - regpostcode
            - proxyfn
            - proxyln
            - proxystreet
            - proxypostcode
            - proxyreason
          properties:
            refNum:
              type: string
              description: the reference number that was shown to the applicant (digital applications only)
              maxLength: 10
              example: 'V3HQ9LKI0W'
            ip:
              type: string
              maxLength: 45
              description: |
                the IP address from which the application was received (digital applications only)
            lang:
              type: string
              minLength: 2
              maxLength: 2
              description: “en” or “cy” according to which language the applicant used
            emsElectorId:
              type: string
              maxLength: 255
              description: the unique ID for this elector as used by the EMS for the current LA/VJ. This will have been returned to the EROP by the EMS over the “EROP to EMS Register Checker API”. See comments in “Elector ID and Identity Matching” above.
            fn:
              type: string
              maxLength: 35
              description: First name
            mn:
              type: string
              maxLength: 100
              description: Middle names (optional)
            ln:
              type: string
              maxLength: 35
              description: Last name
            dob:
              type: string
              format: date
              description: date of birth in ISO8601 format
            regproperty:
              type: string
              maxLength: 255
            regstreet:
              type: string
              maxLength: 255
            reglocality:
              type: string
              maxLength: 255
            regtown:
              type: string
              maxLength: 255
            regarea:
              type: string
              maxLength: 255
            regpostcode:
              type: string
              maxLength: 255
            reguprn:
              type: string
              description: Unique Property Reference Number consisting of up to 12 digits in length
              pattern: '^\d{1,12}$'
            phone:
              type: string
              maxLength: 50
              description: phone number for contact
            email:
              type: string
              format: email
              maxLength: 255
              description: email address for contact
            proxyfn:
              type: string
              maxLength: 35
              description: ' First name of the chosen proxy'
            proxymn:
              type: string
              maxLength: 100
              description: |
                Middle name(s) (optional) of the chosen proxy
            proxyln:
              type: string
              maxLength: 35
              description: |
                last name of the chosen proxy
            proxyfamilyrelationship:
              type: string
              maxLength: 500
              description: |
                (optional) the family relationship (if any) of the chosen proxy. The question to users is “What is your proxy’s relationship to you?”
            proxyproperty:
              type: string
              maxLength: 255
            proxystreet:
              type: string
              maxLength: 255
            proxylocality:
              type: string
              maxLength: 255
            proxytown:
              type: string
              maxLength: 255
            proxyarea:
              type: string
              maxLength: 255
            proxypostcode:
              type: string
              maxLength: 10
            proxyuprn:
              type: string
              description: Unique Property Reference Number consisting of up to 12 digits in length
              pattern: '^\d{1,12}$'
            proxyphone:
              type: string
              maxLength: 50
            proxyemail:
              type: string
              format: email
              maxLength: 255
            proxyreason:
              type: string
              description: |-
                a free-form text value containing the applicant’s response to the question “please explain why you are not able to go to your polling station on polling day” for the primary form variant or other text for other form variants (max 500 utf-8 chars)
                All proxy vote forms, including variants which require supporting documentation, will be handled in the EROP. The ERO user working in that application will review the documentation as required and only accepted applications will be seen on this API. The supporting documentation, if any, will not be sent through here. The field “proxyreason” will contain details for other form variants and may have been filled in by an ERO user.
              maxLength: 500
            signature:
              type: string
            proxyVoteUntilFurtherNotice:
              type: boolean
              description: Mutually exclusive proxy voting limits. True if the elector wishes to vote by proxy until further notice.
            proxyVoteForSingleDate:
              type: string
              format: date
              description:  |
                If proxy application is for a single date
                In ISO8601 date format '2022-08-02'
            proxyVoteStartDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by proxy for the period defined by the two dates. If present, then proxyVoteEndDate must also be present
                In ISO8601 date format '2022-08-02'
            proxyVoteEndDate:
              type: string
              format: date
              description:  |
                If set, the elector wishes to vote by proxy for the period defined by the two dates. If present, then proxyVoteStartDate must also be present
                In ISO8601 date format '2022-08-02'
      required:
        - id
        - createdAt
        - source
        - gssCode
        - authorisedAt
        - authorisingStaffId
        - detail
    ProxyVoteAcceptedResponse:
      title: ProxyVoteAcceptedResponse
      type: object
      properties:
        pageSize:
          type: integer
        proxyVotes:
          type: array
          items:
            $ref: '#/components/schemas/ProxyVote'
    PostalVoteAcceptedResponse:
      title: PostalVoteAcceptedResponse
      type: object
      properties:
        pageSize:
          type: integer
        proxyVotes:
          type: array
          items:
            $ref: '#/components/schemas/PostalVote'
  responses:
    PostalVoteAccepted:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostalVoteAcceptedResponse'
    ProxyVoteAccepted:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProxyVoteAcceptedResponse'
  securitySchemes:
    emsCertificateLambdaAuthorizer:
      name: Authorization
      type: apiKey
      in: header
