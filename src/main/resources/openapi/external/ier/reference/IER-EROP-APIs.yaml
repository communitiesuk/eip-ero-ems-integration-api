openapi: 3.0.0
info:
  title: IER-ERO-APIs
  version: '1.2'
  description: Contains a mix of APIs and models for SQS between IER and ERO systems.
  contact:
    name: Krister Bone
    email: krister.bone@valtech.com
servers:
  - url : 'http://localhost:5000'
  - url: 'https://erop-api.int.eip.rtv.ierds.uk'
  - url: 'https://erop-api.test.eip.rtv.ierds.uk'
  - url: 'https://erop-api.rtv.ierds.uk'
paths:
  /eros:
    description: Endpoints relating to EROs
    parameters: []
    get:
      summary: >
        Lists all EROs currently in the system, including their configuration and
        managed Local Authorities
      responses:
        '200':
          $ref: '#/components/responses/EROListResponse'
  /ero:
    description: TODO:EIP1-3901 OBSOLETE -- discuss deprecating with Valtech, in favour of /eros -> activeClientCertificateSerials
    parameters: []
    get:
      summary: Get ERO Identifier from Certificate Serial
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/EROCertificateMappingResponse'
        '404':
          description: Not Found
      operationId: get-ero-certificate-serial-mapping
      description: Return ERO identifier for the certificate serial provided.
      parameters:
        - schema:
            type: string
          in: query
          name: certificateSerial
          description: The serial identifier as provided by the API gateway lambda
  /eroipallowlist:
    description: TODO:EIP1-3901 OBSOLETE? -- discuss deprecating with Valtech, in favour of /eros -> localAuthorities -> ipAddressCidrs
    parameters: []
    get:
      summary: Get all allowlisted ERO IP addresses managed in IER admin app
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/EROAllowListedIPAddressesResponse'
      operationId: get-ero-allowlisted-ips
      description: Returns all allowlisted IP addresses to restrict use of the Register Checker API
      parameters: []
  /resubmit-photo-invite:
    parameters: []
    post:
      summary: Notify the frontend that a particular user needs to upload a new photo
      tags: []
      responses:
        '200':
          description: "Success"
        '400':
          description: "Request invalid"
        '500':
          description: "Error with our service - invite has not been written to our systems"
      operationId: post-follow-up-photo-upload
      description: Prepares the frontend to allow a user with the given credentials to upload a new photo
      requestBody:
        description: A JSON object containing user information to be invited
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResubmitPhotoInvite'
  /update-voter-card-application-statistics:
    parameters: []
    post:
      summary: Notify the IER admin stats that an application has changed.
      tags: [ ]
      responses:
        '200':
          description: "Success"
        '400':
          description: "Request invalid"
        '500':
          description: "Error with our service"
      operationId: update-voter-card-application-statistics
      description: >
        The ERO Portal should send this message to IER every time a relevant change occurs.
        The ERO Portal must send all fields every time an application is updated, not just
        changed fields. (Some fields are nullable, if that information is inapplicable to the application.)
      requestBody:
        description: The new state of the application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoterCardApplicationStatisticsMessage'
components:
  schemas:
    Category1Document:
      $ref: ../Models/Category1Document.yaml
    Category2Document:
      $ref: ../Models/Category2Document.yaml
    CreateVoterCardApplicationMessage:
      $ref: ../Models/CreateVoterCardApplicationMessage.yaml
    UpdateVoterCardApplicationStatisticsMessage:
      $ref: ../Models/UpdateVoterCardApplicationStatisticsMessage.yaml
    CreatePostalVoteApplicationMessage:
      $ref: ../Models/CreatePostalVoteApplicationMessage.yaml
    CreateProxyVoteApplicationMessage:
      $ref: ../Models/CreateProxyVoteApplicationMessage.yaml
    EROAllowListedIPAddresses:
      title: EROAllowListedIPAddresses
      type: array
      items:
        type: object
        properties:
          eroId:
            type: string
          ipAddresses:
            type: array
            items:
              type: string
      description: List of all ERO allowlisted IP/CIDRs addresses
    EROCertificateMapping:
      title: EROCertificateMapping
      type: object
      description: ERO certificate serial and IER ERO identifier
      properties:
        eroId:
          type: string
        certificateSerial:
          type: string
    ERODetails:
      $ref: ../Models/ERODetails.yaml
    SubmitNewVoterCardPhotoMessage:
      title: SubmitNewVoterCardPhotoMessage
      description: 'Message describing the resubmission of a Photo for a Voter Card Application. EROP own the queue and the listener implementation (the API). IER are a producer of the message and therefore a consumer of the API'
      x-api-owner: EROP
      x-api-consumer: IER
      type: object
      properties:
        applicationId:
          type: string
          pattern: '^[a-fA-F\d]{24}$'
          description: 'The unique IER identifier for this application. A 24 character hex string.'
        photo:
          $ref: ../Models/PhotoReference.yaml
        dateTimeSubmitted:
          type: string
          format: date-time
      required:
        - applicationId
        - photo
        - dateTimeSubmitted
    ResubmitPhotoInvite:
      title: ResubmitPhotoInvite
      type: object
      description: Contains information for user to be invited to resubmit photo
      properties:
        applicationId:
          type: string
          pattern: '^[a-fA-F\d]{24}$'
          description: 'The unique IER identifier for this application. A 24 character hex string.'
        applicationReference:
          type: string
          description: 'The application reference as known by the citizen. Not guaranteed to be unique.'
        hasDateOfBirth:
          type: boolean
        dateOfBirth:
          type: string
          format: date
          description: 'Must be provided if hasDateOfBirth is true'
        gssCode:
          $ref: ../Models/Primatives/GssCode.yaml
      required:
        - applicationId
        - applicationReference
        - hasDateOfBirth
        - gssCode
  responses:
    EROListResponse:
      description: >
        Lists all EROs currently in the system, including their configuration and
        managed Local Authorities
      content:
        application/json:
          schema:
            type: object
            properties:
              eros:
                type: array
                items:
                  $ref: '#/components/schemas/ERODetails'
    EROAllowListedIPAddressesResponse:
      description: List of all ERO allowlisted IP/CIDRs addresses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EROAllowListedIPAddresses'
    EROCertificateMappingResponse:
      description: ERO certificate serial and IER ERO identifier
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EROCertificateMapping'
